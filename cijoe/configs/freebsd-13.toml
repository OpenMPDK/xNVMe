# The SSH options are passed verbatim to paramiko; see https://www.paramiko.org/
[transport.ssh]
username = "root"
password = ""
hostname = "localhost"
port = 4200

[os]
name = "freebsd"
version = "13"

[build.compiler]
bin = "clang"

# boot_images:
# qemu images, could be cloudinit images which have been processed through initialization process

# Use this when running the boot-img workflow, download, unpack and convert the "basic-ci" image to
# qcow2 and place it in the boot_images folder
#  freebsd:
#    url: "https://download.freebsd.org/releases/CI-IMAGES/13.1-RELEASE/amd64/Latest/FreeBSD-13.1-RELEASE-amd64-BASIC-CI.raw.xz"
#    img: "{{ local.env.HOME}}/images/boot_images/FreeBSD-13.1-RELEASE-amd64-BASIC-CI.qcow2"
[boot_images.freebsd]
url = "https://refenv.fra1.digitaloceanspaces.com/boot_images/freebsd-13.1-ksrc-amd64.qcow2"
img = "{{ local.env.HOME}}/images/boot_images/freebsd-13.1-ksrc-amd64.qcow2"

[qemu]
#system_bin = "{{ local.env.HOME }}/opt/qemu/bin/qemu-system-x86_64"
system_bin = "/opt/qemu/bin/qemu-system-x86_64"
img_bin = "qemu-img"

[qemu.repository]
upstream = "https://github.com/qemu/qemu.git"
path = "{{ local.env.HOME }}/git/qemu"
tag = "v7.1.0"

[qemu.build]
prefix = "{{ local.env.HOME }}/opt/qemu"

[qemu.guests.freebsd]
path = "{{ local.env.HOME }}/guests/freebsd-amd64"
boot_img = "freebsd"
cloudinit = "freebsd"

# This string is appended to the end of the qemu-system command-line, a wildcard for whatever
# you need. You can also consider writing a worklet to serve your needs. See the
# "qemu.guest_start" and "qemu.guest_start_nvme" worklets for reference.
extra_args = ""

# Plain qemu-system arguments (-cpu, -machine, -smp, etc), the sub-keys are
# e.g. "-machine type=..."
[qemu.guests.freebsd.system_args]
cpu = "host"
smp = 4
m = "6G"
device = "intel-iommu,pt=on,intremap=on"

[qemu.guests.freebsd.system_args.machine]
type = "q35,kernel_irqchip=split,accel=kvm"

## Fancy Arguments
#
# host_share: enables the the guest to mount a directory from the host by running:
# "mount -t 9p -o trans=virtio hostshare foo -oversion=9p2000.L"
#[qemu.guests.freebsd.fancy]
#host_share = "{{ local.env.HOME }}/git"

# tcp_forward: enables the host access to the 'guest' port via the 'host' port.
# Useful for doing things like SSH-ing into the guest
[qemu.guests.freebsd.fancy.tcp_forward]
host = 4200
guest = 22

[[devices]]
uri = "/dev/nvme0ns1"
nsid = 1
labels = [ "dev", "bdev", "nvm" ]
driver_attachment = "kernel"

[[devices]]
uri = "/dev/nvme1ns1"
nsid = 1
labels = [ "dev", "bdev", "nvm" ]
driver_attachment = "kernel"

[[devices]]
uri = "/tmp/xnvme-testfile.bin"
nsid = 1
labels = [ "file" ]
driver_attachment = "kernel"

[[devices]]
uri = "2GB"
nsid = 1
labels = [ "dev", "bdev", "nvm", "ramdisk" ]
driver_attachment = "kernel"

[xnvme.repository]
upstream = "https://github.com/OpenMPDK/xNVMe.git"
path = "/root/git/xnvme"

[xnvme.source]
path = "/tmp/xnvme_source"

[xnvme.build]
type = "debug"

[fio]
bin = "/opt/fio/bin/fio"

[fio.repository]
upstream = "https://github.com/axboe/fio.git"
path = "/root/git/fio"
tag = "fio-3.34"

[fio.build]
prefix = "/opt/fio"

[fio.engines.libaio]
type = "builtin"

[fio.engines.io_uring]
type = "builtin"

[fio.engines.io_uring_cmd]
type = "builtin"

[fio.engines.xnvme]
type = "builtin"

[fio.engines.spdk_nvme]
path = "/opt/aux/spdk_nvme"
type = "external_preload"

[fio.engines.spdk_bdev]
path = "/opt/aux/spdk_bdev"
type = "external_preload"
