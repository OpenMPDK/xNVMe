/**
 * {{ meta.prefix }}_spec - NVMe structs, enum, values and helper function declarations
 *
 * If an entity is defined in the NVMe specification, then an enum or struct should exist in this
 * header file. The purpose of this is to provide a single point of entry for spec. definitions for
 * the purpose of providing structs with accessors, and enums for values such as command opcodes.
 *
 * These are defined in portable fashion, thus, bitfield-accessors are not done
 *
 * NOTE: This header is auto-generated by the xNVMe code-emitter-tool toolbox/emitter/emitter.py
 *
 * Copyright (C) Simon A. F. Lund <os@safl.dk>
 * SPDX-License-Identifier: BSD-3-CLAUSE
 *
 * @headerfile {{ meta.prefix }}_spec.h
 */
#ifndef {{ meta.prefix | upper }}_SPEC_H
#define {{ meta.prefix | upper }}_SPEC_H

#ifdef __cplusplus
extern "C" {
#endif

#include <assert.h>
#include <stdint.h>
#include <sys/types.h>

{{ content }}

#ifdef __cplusplus
}
#endif

#endif /* {{ meta.prefix | upper }}_SPEC_H */
